// <auto-generated />
using System;
using AndreAirlinesAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AndreAirlinesAPI.Migrations
{
    [DbContext(typeof(AndreAirlinesAPIContext))]
    partial class AndreAirlinesAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AndreAirlinesAPI.Model.Aeronave", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Aeronave");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.Aeroporto", b =>
                {
                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("EnderecoID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sigla");

                    b.HasIndex("EnderecoID");

                    b.ToTable("Aeroporto");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.Classe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classe");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.Endereco", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.Passageiro", b =>
                {
                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnderecoID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CPF");

                    b.HasIndex("EnderecoID");

                    b.ToTable("Passageiro");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.Passagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassageiroCPF")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("PrecoBaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PassageiroCPF");

                    b.HasIndex("PrecoBaseId");

                    b.ToTable("Passagem");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.PrecoBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClasseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<double>("PromocaoPorcentagem")
                        .HasColumnType("float");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("VooID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.HasIndex("VooID");

                    b.ToTable("PrecoBase");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.Voo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoAeronaveCodigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DestinoSigla")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("HorarioDesembarque")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioEmbarque")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrigemSigla")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("CodigoAeronaveCodigo");

                    b.HasIndex("DestinoSigla");

                    b.HasIndex("OrigemSigla");

                    b.ToTable("Voo");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.Aeroporto", b =>
                {
                    b.HasOne("AndreAirlinesAPI.Model.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoID");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.Passageiro", b =>
                {
                    b.HasOne("AndreAirlinesAPI.Model.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoID");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.Passagem", b =>
                {
                    b.HasOne("AndreAirlinesAPI.Model.Passageiro", "Passageiro")
                        .WithMany()
                        .HasForeignKey("PassageiroCPF");

                    b.HasOne("AndreAirlinesAPI.Model.PrecoBase", "PrecoBase")
                        .WithMany()
                        .HasForeignKey("PrecoBaseId");

                    b.Navigation("Passageiro");

                    b.Navigation("PrecoBase");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.PrecoBase", b =>
                {
                    b.HasOne("AndreAirlinesAPI.Model.Classe", "Classe")
                        .WithMany()
                        .HasForeignKey("ClasseId");

                    b.HasOne("AndreAirlinesAPI.Model.Voo", "Voo")
                        .WithMany()
                        .HasForeignKey("VooID");

                    b.Navigation("Classe");

                    b.Navigation("Voo");
                });

            modelBuilder.Entity("AndreAirlinesAPI.Model.Voo", b =>
                {
                    b.HasOne("AndreAirlinesAPI.Model.Aeronave", "CodigoAeronave")
                        .WithMany()
                        .HasForeignKey("CodigoAeronaveCodigo");

                    b.HasOne("AndreAirlinesAPI.Model.Aeroporto", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoSigla");

                    b.HasOne("AndreAirlinesAPI.Model.Aeroporto", "Origem")
                        .WithMany()
                        .HasForeignKey("OrigemSigla");

                    b.Navigation("CodigoAeronave");

                    b.Navigation("Destino");

                    b.Navigation("Origem");
                });
#pragma warning restore 612, 618
        }
    }
}
